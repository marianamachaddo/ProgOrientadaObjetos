package model;

public class Aluno implements Comparable<Aluno> {
	// 
	// CONSTANTES
	//
	final public static int TAMANHO_MAX_NOME = 40;
	
	//
	// ATRIBUTOS
	//
	private int matricula;
	private String nome;
	
	//
	// ATRIBUTOS DE RELACIONAMENTO
	//
	private Curso curso;
	
	//
	// MÉTODOS
	//
	public Aluno(int matricula, String nome, Curso curso) 
			throws ModelException {
		this.setMatricula(matricula);
		this.setNome(nome);
		this.setCurso(curso);
	}

	public int getMatricula() {
		return this.matricula;
	}

	public void setMatricula(int matricula) throws ModelException{
		Aluno.validarMatricula(matricula);
		this.matricula = matricula;
	}

	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) throws ModelException {
		Aluno.validarNome(nome);
		this.nome = nome;
	}

	public Curso getCurso() {
		return this.curso;
	}

	public void setCurso(Curso curso) throws ModelException {
		Aluno.validarCurso(curso);
		
		if(this.curso != null)
			this.curso.removerAluno(this);		
		
		this.curso = curso;
		
		this.curso.adicionarAluno(this);
	}
		
	public static void validarMatricula(int matricula) throws ModelException {
		if (matricula <= 0)
			throw new ModelException("A matrícula do aluno deve ser maior que zero!");
	}
	
	public static void validarNome(String nome) throws ModelException {
		if (nome == null || nome.length() == 0)
			throw new ModelException("O nome do aluno não pode ser nulo!");
		String expRegular = "[A-Za-zÀ-ÿ ]{5," + TAMANHO_MAX_NOME + "}";
		if(!nome.matches(expRegular))
			throw new ModelException("O nome passado é inválido!");
	}
	
	public static void validarCurso(Curso curso) throws ModelException {
		if(curso == null)
			throw new ModelException("O curso do aluno não pode ser nulo!");
	}
	
	public int compareTo(Aluno outro) {
		return Integer.compare(this.matricula, outro.matricula);
	}
	
	@Override
	public String toString() {
		return this.matricula + "-" + this.nome;
	}
}
