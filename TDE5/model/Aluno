package model;

import java.util.ArrayList;
import java.util.List;

public class Aluno implements Comparable<Aluno> {

    final public static int TAMANHO_MAX_NOME = 40;

    private int matricula;
    private String nome;

    private Curso curso;
    private List<Turma> turmas;

    public Aluno(int matricula, String nome, Curso curso)
            throws ModelException {
        this.setMatricula(matricula);
        this.setNome(nome);
        this.setCurso(curso);
        this.turmas = new ArrayList<>();
    }

    public int getMatricula() {
        return this.matricula;
    }

    public void setMatricula(int matricula) throws ModelException {
        Aluno.validarMatricula(matricula);
        this.matricula = matricula;
    }

    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) throws ModelException {
        Aluno.validarNome(nome);
        this.nome = nome;
    }

    public Curso getCurso() {
        return this.curso;
    }

    public void setCurso(Curso curso) throws ModelException {
        Aluno.validarCurso(curso);

        if (this.curso != null)
            this.curso.removerAluno(this);

        this.curso = curso;

        this.curso.adicionarAluno(this);
    }
    
    public List<Turma> getTurmas() {
        return new ArrayList<>(turmas);
    }

    public void adicionarTurma(Turma t) {
        if (!this.turmas.contains(t)) {
            this.turmas.add(t);
            t.adicionarAluno(this);
        }
    }

    public void removerTurma(Turma t) {
        if (this.turmas.contains(t)) {
            this.turmas.remove(t);
            t.removerAluno(this);
        }
    }
    
    public static void validarMatricula(int matricula) throws ModelException {
        if (matricula <= 0)
            throw new ModelException("A matrícula do aluno deve ser maior que zero!");
    }

    public static void validarNome(String nome) throws ModelException {
        if (nome == null || nome.length() == 0)
            throw new ModelException("O nome do aluno não pode ser nulo!");
        String expRegular = "[A-Za-zÀ-ÿ ]{5," + TAMANHO_MAX_NOME + "}";
        if (!nome.matches(expRegular))
            throw new ModelException("O nome passado é inválido!");
    }

    public static void validarCurso(Curso curso) throws ModelException {
        if (curso == null)
            throw new ModelException("O curso do aluno não pode ser nulo!");
    }

    @Override
    public int compareTo(Aluno outro) {
        return Integer.compare(this.matricula, outro.matricula);
    }

    @Override
    public String toString() {
        return this.matricula + "-" + this.nome;
    }
    
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + matricula;
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Aluno other = (Aluno) obj;
        if (matricula != other.matricula)
            return false;
        return true;
    }
}
